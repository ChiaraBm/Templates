@using MoonCore.Blazor.FlyonUi.Modals
@using MoonCore.Blazor.FlyonUi.Toasts
@using MoonCore.Blazor.FlyonUi.Files.Drop
@using WebAppTemplate.Frontend.UI.Partials
@inherits LayoutComponentBase

<div class="relative isolate flex min-h-svh w-full max-lg:flex-col bg-background">
    <AppSidebar Layout="this"/>
    <AppHeader Layout="this" />

    <main class="flex flex-1 flex-col lg:pb-5 lg:min-w-0 lg:pt-5 lg:pr-3.5 lg:pl-64">
        <div class="grow p-6 lg:rounded-lg lg:p-10 lg:ring-1 lg:shadow-xs lg:bg-base-100/20 lg:ring-base-content/10">
            <CascadingValue Value="this" IsFixed="true">
                @Body
            </CascadingValue>
        </div>
    </main>

</div>

<ToastLauncher/>
<ModalLauncher/>

<DropHandler />

<div id="blazor-error-ui" class="fixed bottom-0 left-0 w-full z-50">
    <div class="bg-error text-base-content p-4 flex flex-row justify-between items-center">
        <div class="flex items-center">
            <i class="icon-bomb text-lg text-base-content me-2"></i>
            <span>An unhandled error has occurred.</span>
        </div>
        <div>
            <a href="#" class="reload text-base-content underline mr-4">Reload</a>
            <a href="#" class="dismiss hidden">🗙</a>
        </div>
    </div>
</div>

@code
{
    // Mobile navigation
    public event Func<Task> OnStateChanged;
    public bool ShowMobileNavigation { get; private set; } = false;

    public async Task ToggleMobileNavigationAsync()
    {
        ShowMobileNavigation = !ShowMobileNavigation;
        await OnStateChanged();
    }
}